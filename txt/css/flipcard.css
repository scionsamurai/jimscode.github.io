/**
  * This is HTML/CSS for putting information into a flipcard. It utilizes the checkbox hack (no js).
  * <input type="checkbox" id="toggle-1" tabindex="0">
  * <label class="container" for="toggle-1" aria-label="Toggle Card">
  *   <span class="card-front">
  *     <div class="card front">text on front</div>
  *   </span>
  *   <span class="card-back">
  *     <div class="card back">i am back</div>
  *   </span>
  *   <span class="additional-text">Additional descriptive text goes here (This is a card element with general information about the post on the frong and a description of the post on the back. You can click to flip this card.)</span>
  * </label>
  */
.container {
  display: block;
  perspective: 600px;
  position: relative;
  transition: transform 0.1s ease-out;
  will-change: transform;
  transition-duration: 0.4s; }

.listener {
  visibility: hidden; }

.card {
  cursor: pointer;
  position: absolute;
  top: 0;
  left: 0;
  backface-visibility: hidden;
  transform-style: preserve-3d;
  transition: transform 0.4s ease-in-out, box-shadow 0.4s ease-in-out;
  will-change: transform, box-shadow; }

.front {
  background-size: cover;
  position: relative;
  transform: rotateX(0deg) rotateY(0deg); }

.back {
  background: rgba(0, 0, 0, 0.1);
  transform: rotateY(-180deg);
  width: 100%;
  height: 100%; }

input[type=checkbox]:checked ~ .container .card {
  transform: rotateY(180deg); }

input[type=checkbox]:checked ~ .container .back {
  visibility: visible;
  transform: rotateX(0deg) rotateY(0deg);
  animation: none;
  position: absolute; }

.container, .card {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  margin: auto;
  width: 100%; }

.card {
  transition-duration: 0.6s; }

.card {
  box-shadow: 0 0 10px var(--background-color-dark); }

.card:hover {
  box-shadow: 0 0 35px var(--background-color-dark); }

input[type=checkbox]:checked ~ .container .card {
  animation: none; }

input[type=checkbox]:checked ~ .container .back {
  animation: none; }

.additional-text {
  position: absolute;
  left: -9999px;
  width: 1px;
  height: 1px;
  overflow: hidden; }

/* Style the pagination links container */
#pagination_links {
  display: flex;
  justify-content: center;
  margin-top: 20px;
  margin-bottom: 2rem; }
  #pagination_links .numbered {
    display: flex;
    overflow: scroll; }

/* Style the pagination links */
#pagination_links a, #pagination_links span {
  display: inline-block;
  padding: 8px 12px;
  margin: 0 5px;
  text-decoration: none;
  color: var(--font-color);
  border: 1px solid var(--background-color-second);
  border-radius: 4px;
  transition: background-color 0.3s ease; }

#pagination_links .current {
  background-color: var(--background-color-dark);
  border: 1px solid var(--font-color); }

/* Add hover effect on pagination links */
#pagination_links a:hover:not(.current) {
  background-color: var(--background-color-dark);
  transform: scale(1.05); }
